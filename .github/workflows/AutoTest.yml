# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: AutoTest

on:
  pull_request:
    branches: [ "develop" ]

jobs:
#jobs는 실행시킬 단위인 job의 모음입니다.
#test라는 job을 실행합니다.
  push_dockerhub:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Create .env file
      run: |
        echo "JWT_SECRET_TOKEN=${{secrets.JWT_SECRET_TOKEN}}" >> .env
        echo "RDS_MYSQL_URL=${{secrets.RDS_MYSQL_URL}}" >> .env
        echo "RDS_MYSQL_USERNAME=${{secrets.RDS_MYSQL_USERNAME}}" >> .env
        echo "RDS_MYSQL_PASSWORD=${{secrets.RDS_MYSQL_PASSWORD}}" >> .env
        echo "GOOGLE_ACCOUNT_EMAIL=${{secrets.GOOGLE_ACCOUNT_EMAIL}}" >> .env
        echo "GOOGLE_ACCOUNT_APP_PASSWORD=${{secrets.GOOGLE_ACCOUNT_APP_PASSWORD}}" >> .env
        echo "AWS_ELASTICACHE_URL=${{secrets.AWS_ELASTICACHE_URL}}" >> .env

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test
    
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
       username: ${{ secrets.DOCKER_HUB_USERNAME }}
       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

       
    - name: Build and push image
      run: |
        docker-compose -f docker-compose-prod.yml build
        docker-compose -f docker-compose-prod.yml push
  test:
    #test가 돌아가는 환경을 설정합니다.
    runs-on: ubuntu-latest
    #환경변수 설정을 해주지 않아 생기던 테스트 문제를 환경변수 설정으로 해결했습니다.
    env:
      JWT_SECRET_TOKEN: ${{secrets.JWT_SECRET_TOKEN}}
    permissions:
      contents: read
    #steps는 환경이 설정된 후 실행되는 작업의 목록입니다.
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    # Gradlew 권한을 설정합니다.
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Test with Gradle Wrapper
      run: ./gradlew test
      
    - name: Cache
      uses: actions/cache@v4.1.2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
