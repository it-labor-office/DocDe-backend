name: Deploy to EC2

on:
  pull_request:
    branches: [ "main" ]

jobs:
  push_dockerhub:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Create .env file
      run: |
        touch ./.env
        echo "${{secrets.ENV_VARIABLES}}" >> .env

    - name: display env
      run: cat .env

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '"' -f 4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
       username: ${{ secrets.DOCKER_HUB_USERNAME }}
       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

       
    - name: Build Docker image
      run: |
        docker-compose -f docker-compose-prod.yml build

      # 5. Docker Hub에 이미지 푸시
    - name: Push Docker image
      run: |
        docker-compose -f docker-compose-prod.yml push docde
         
    - uses: appleboy/ssh-action@master
      with:
        key: ${{ secrets.EC2_SSH_KEY }} # 내가 변수로 저장한 pem key
        host: ${{secrets.AWS_INSTANCE_IP}} # 내가 변수로 저장한 ip
        username: ${{secrets.USER}} # 내가 변수로 저장한 User
        port: 22
        script: |
          echo "Creating .env file..."
          echo "${{secrets.ENV_PROD}}" > ./.env
          echo ".env file created successfully"
          docker-compose 

          
        
        

        
